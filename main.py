from aiogram import Dispatcher, Bot,types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import API_TOKEN
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

async def set_commads(bot: Bot):
    commads = [
        types.BotCommand(command="/start",description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ö–∏–Ω–æ–º–∞–Ω–∞"),
        types.BotCommand(command="/help", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ö–∏–Ω–æ–º–∞–Ω–∞"),
        types.BotCommand(command="/about", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ö–∏–Ω–æ–º–∞–Ω–∞"),
        types.BotCommand(command="/shytka", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –ö–∏–Ω–æ–º–∞–Ω–∞")

    ]
    await bot.set_my_commands(commads)

@dp.message_handler(commands="start")
async def start(message: types.Message):
    await message.reply('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –°—ç—Ä! üñê \n–Ø –ö–∏–Ω–æ–º–∞–Ω üé¨, –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? \n‚ú® –ù–æ–≤–∏–Ω–∫–∏? \nüé® –ö–ª–∞—Å—Å–∏–∫–∞? \n–ò–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ –±—ã —è –≤–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞? üßê', reply_markup= keyboard_vopros)

@dp.message_handler(commands="help")
async def help(message: types.Message):
    await message.reply('–í–∞–º –Ω–µ –ø–æ–º–æ–≥—É—Ç')

@dp.message_handler(commands="about")
async def about(message: types.Message):
    await message.reply('–ü–∏—Å–∞–ª –∫–æ–¥ –¥–ª—è –±–æ—Ç–∞ –†–µ–Ω–∞—Ç üíª\n–ò–≥—Ä–∞–ª –≤ –±—Ä–∞–≤–ª —Å—Ç–∞—Ä—Å –ú–∏—à–∞ üéÆ')

@dp.message_handler(commands="shytka")
async def shytka(message: types.Message):
    await message.reply('–ù–µ —à—É—Ç–∏—Ç–µ (—à—É—Ç–∫–∞)',reply_markup=keyboard_wiki)


async def on_startup(dispatcher):
    await set_commads(dispatcher.bot)

keyboard_vopros = InlineKeyboardMarkup(row_width= 1)
button = InlineKeyboardButton('–ß—Ç–æ –ø–æ—Å–æ–≤–µ—Ç—É–µ—Ç–µ‚ùì', callback_data= 'zh_p_?')
button1 = InlineKeyboardButton('–ö–∞–∫–∏–µ —Å–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ–∏–ª—å–º—ã? üß®', callback_data='k_s_p_f_?')
button2 = InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –∂–∞–Ω—Ä üì∫', callback_data='v_zh_?')
keyboard_vopros.add(button,button1,button2)


keyboard_zhanor = InlineKeyboardMarkup(row_width= 1)
button3 = InlineKeyboardButton ('–ö–æ–º–µ–¥–∏—è ü§£', callback_data='comic')
button4 = InlineKeyboardButton ('–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ ü§ñ', callback_data='fantast')
button5 = InlineKeyboardButton ('–£–∂–∞—Å—ã üëª', callback_data='yzhas')
button6 = InlineKeyboardButton ('–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º ü§®', callback_data='v_k_v')
keyboard_zhanor.add(button3,button4,button5,button6)

keyboard_wiki = InlineKeyboardMarkup(row_width= 1)
button7 = KeyboardButton('–ü—Ä–∏–≤–µ—Ç!‚úã', url='https://kartinkof.club/uploads/posts/2022-06/1655786469_44-kartinkof-club-p-kartinki-s-nadpisyu-moi-tebe-privetik-49.jpg')
button8 = KeyboardButton('–ö–∞–∫ –¥–µ–ª–∞‚ùì', url='https://avatars.mds.yandex.net/i?id=a3f1660491e3e8fda0475dd4146fddd41e78f600-5351873-images-thumbs&n=13')
keyboard_wiki.add(button7,button8)

keyboard_back = InlineKeyboardMarkup(row_width= 1)
button9 = KeyboardButton('–ù–∞–∑–∞–¥ üîô', callback_data='back')
keyboard_back.add(button9)

@dp.callback_query_handler(lambda c: c.data == 'v_zh_?')
async def click_button(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id,'–í—ã–±–∏—Ä–∞–π—Ç–µ –∂–∞–Ω—Ä üì∫',reply_markup=keyboard_zhanor)



@dp.callback_query_handler(lambda c: c.data == 'v_k_v')
async def click_button2(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text('–í–æ–∑—Ä–∞—â–∞—é –≤–∞—Å –∫ –≤–æ–ø—Ä–æ—Å–∞–º ü§ó', reply_markup= keyboard_vopros)


@dp.callback_query_handler(lambda c: c.data == 'zh_p_?')
async def click_button2(callback_query: types.CallbackQuery):
    await bot.send_photo(callback_query.from_user.id, 'https://gl.weburg.net/00/movies/1/420/original/405138.jpg',caption= '–ü–æ—Å–æ–≤–µ—Ç—É—é –≤–∞–º "–ü–æ–±–µ–≥ –∏–∑ –®–æ—É—à–µ–Ω–∫–∞" \n–ñ–∞–Ω—Ä –¥—Ä–∞–º–∞\n–†–µ–∂–∏—Å—Å—ë—Ä –§—Ä—ç–Ω–∫ –î–∞—Ä–∞–±–æ–Ω—Ç\n–ü—Ä–æ–¥—é—Å–µ—Ä –ù–∏–∫–∏ –ú–∞—Ä–≤–∏–Ω\n–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: 16+',reply_markup=keyboard_back)
    await bot.send_message(callback_query.from_user.id,'–§–∏–ª—å–º –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø–æ–≤–µ—Å—Ç–∏ –°—Ç–∏–≤–µ–Ω–∞ –ö–∏–Ω–≥–∞ ¬´–†–∏—Ç–∞ –•–µ–π—É–æ—Ä—Ç –∏ —Å–ø–∞—Å–µ–Ω–∏–µ –∏–∑ –®–æ—É—à–µ–Ω–∫–∞¬ª. –û–Ω —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –±–∞–Ω–∫–∏—Ä–∞ –≠–Ω–¥–∏ –î—é—Ñ—Ä–µ–π–Ω–∞ (–¢–∏–º –†–æ–±–±–∏–Ω—Å), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–æ–≤–æ—Ä—ë–Ω –∫ –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ–º—É –∑–∞–∫–ª—é—á–µ–Ω–∏—é –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ç—é—Ä—å–º–µ –®–æ—É—à–µ–Ω–∫–∞ –∑–∞ —É–±–∏–π—Å—Ç–≤–æ —Å–≤–æ–µ–π –∂–µ–Ω—ã –∏ –µ—ë –ª—é–±–æ–≤–Ω–∏–∫–∞, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –µ–≥–æ –∑–∞—è–≤–ª–µ–Ω–∏—è –æ –Ω–µ–≤–∏–Ω–æ–≤–Ω–æ—Å—Ç–∏. –í —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–≤—É—Ö –¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–π –æ–Ω –¥—Ä—É–∂–∏—Ç —Å –¥—Ä—É–≥–∏–º –∑–∞–∫–ª—é—á—ë–Ω–Ω—ã–º, –∫–æ–Ω—Ç—Ä–∞–±–∞–Ω–¥–∏—Å—Ç–æ–º –≠–ª–ª–∏—Å–æ–º ¬´–†–µ–¥–æ–º¬ª –†–µ–¥–¥–∏–Ω–≥–æ–º (–ú–æ—Ä–≥–∞–Ω –§—Ä–∏–º–∞–Ω), –∏ –∏–≥—Ä–∞–µ—Ç –≤–∞–∂–Ω—É—é —Ä–æ–ª—å –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–æ –æ—Ç–º—ã–≤–∞–Ω–∏—é –¥–µ–Ω–µ–≥, –≤–æ–∑–≥–ª–∞–≤–ª—è–µ–º–æ–π —Ç—é—Ä–µ–º–Ω—ã–º –Ω–∞–¥–∑–∏—Ä–∞—Ç–µ–ª–µ–º –°—ç–º—é—ç–ª–µ–º –ù–æ—Ä—Ç–æ–Ω–æ–º')

@dp.callback_query_handler(lambda c: c.data == 'k_s_p_f_?')
async def click_button1(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id,'–§–∏–ª—å–º—ã, –Ω–∞–±—Ä–∞–≤—à–∏–µ üîü –±–∞–ª–ª–æ–≤ –∏–∑ üîü\n1. –î–∂–∞–Ω–≥–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω—ã–π (2012)\n2. –ù–∞—á–∞–ª–æ (2010)\n3. –ü–µ—Ç–ª–∏—Ç–µ–ª—å (2012)\n4. –ë–µ—Å—Å–ª–∞–≤–Ω—ã–µ —É–±–ª—é–¥–∫–∏ (2009)\n5. –ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ —á—Ç–∏–≤–æ (1994)\n6. –í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü: –ë—Ä–∞—Ç—Å—Ç–≤–æ –ö–æ–ª—å—Ü–∞ (2001)\n7. –°–ø–∏—Å–æ–∫ –®–∏–Ω–¥–ª–µ—Ä–∞ (1993)\n8. –ö—Ä–µ—Å—Ç–Ω—ã–π –æ—Ç–µ—Ü (1972)\n9. –ó–≤–µ–∑–¥–Ω—ã–µ –≤–æ–π–Ω—ã: —ç–ø–∏–∑–æ–¥ IV - –ù–æ–≤–∞—è –Ω–∞–¥–µ–∂–¥–∞ (1977)\n10. –ú–∞—Ç—Ä–∏—Ü–∞ (1999)',reply_markup=keyboard_back)

@dp.callback_query_handler(lambda c: c.data == 'comic')
async def click_button(callback_query: types.CallbackQuery):
    await bot.send_photo(callback_query.from_user.id, 'https://1gai.ru/uploads/posts/2022-07/1658917054_38.jpg',caption='–ü–æ—Å–æ–≤–µ—Ç—É—é –≤–∞–º "–û—á–µ–Ω—å —Å—Ç—Ä–∞—à–Ω–æ–µ –∫–∏–Ω–æ"\n–ñ–∞–Ω—Ä—ã: –∫–æ–º–µ–¥–∏—è, –ø–∞—Ä–æ–¥–∏—è, —Å–ª—ç—à–µ—Ä\n–†–µ–∂–∏—Å—Å—ë—Ä: –ö–∏–Ω–µ–Ω –ê–π–≤–æ—Ä–∏ –£—ç–π–∞–Ω—Å\n–ü—Ä–æ–¥—é—Å–µ—Ä—ã: –≠—Ä–∏–∫ –ì–æ–ª–¥, –õ–∏ –ú—ç–π–µ—Å\n–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: 18+',reply_markup=keyboard_back)

@dp.callback_query_handler(lambda c: c.data == 'fantast')
async def click_button(callback_query: types.CallbackQuery):
    await bot.send_photo(callback_query.from_user.id,'https://mir-s3-cdn-cf.behance.net/project_modules/max_3840/ef0bfe28203139.56371454283f9.jpg',caption='–ü–æ—Å–æ–≤–µ—Ç—É—é –≤–∞–º "–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä"\n–ñ–∞–Ω—Ä—ã: –Ω–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞, –±–æ–µ–≤–∏–∫, —Ç—Ä–∏–ª–ª–µ—Ä, –Ω–µ–æ–Ω—É–∞—Ä\n–†–µ–∂–∏—Å—Å—ë—Ä: –î–∂–µ–π–º—Å –ö—ç–º–µ—Ä–æ–Ω\n–ü—Ä–æ–¥—é—Å–µ—Ä: –ì—ç–π–ª –≠–Ω–Ω –•—ë—Ä–¥\n–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: 18+',reply_markup=keyboard_back)

@dp.callback_query_handler(lambda c: c.data == 'yzhas')
async def click_button(callback_query: types.CallbackQuery):
    await bot.send_photo(callback_query.from_user.id,'https://upload.wikimedia.org/wikipedia/ru/thumb/c/c3/Alien_movie_poster.jpg/232px-Alien_movie_poster.jpg',caption='–ü–æ—Å–æ–≤–µ—Ç—É—é –≤–∞–º "–ß—É–∂–æ–π"\n–ñ–∞–Ω—Ä:	–Ω–∞—É—á–Ω–æ-—Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–µ—Å–∫–∏–π, —Ñ–∏–ª—å–º —É–∂–∞—Å–æ–≤\n–†–µ–∂–∏—Å—Å—ë—Ä: –†–∏–¥–ª–∏ –°–∫–æ—Ç—Ç\n–ü—Ä–æ–¥—é—Å–µ—Ä—ã:	–ì–æ—Ä–¥–æ–Ω –ö—ç—Ä—Ä–æ–ª–ª, –î—ç–≤–∏–¥ –ì–∞–π–ª–µ—Ä, –£–æ–ª—Ç–µ—Ä –•–∏–ª–ª\n–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: 18+',reply_markup=keyboard_back)

@dp.callback_query_handler(lambda c: c.data == 'back')
async def click_button1(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –°—ç—Ä! üñê \n–Ø –ö–∏–Ω–æ–º–∞–Ω üé¨, –ø—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? \n‚ú® –ù–æ–≤–∏–Ω–∫–∏? \nüé® –ö–ª–∞—Å—Å–∏–∫–∞? \n–ò–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ –±—ã —è –≤–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞? üßê', reply_markup= keyboard_vopros)


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates= True, on_startup= on_startup)